# To get all the lambdas using python2.6
SELECT
  accountId,
  resourceId,
  resourceType,
  configuration.runtime,
  configuration.lastModified,
  configuration.description
WHERE
  resourceType = 'AWS::Lambda::Function'
  AND configuration.runtime = 'python2.7'
  
  
  #TO list all the EBS volumes unsused
  SELECT
  resourceId,
  accountId,
  awsRegion,
  resourceType,
  configuration.volumeType,
  configuration.size,
  resourceCreationTime,
  tags,
  configuration.encrypted,
  configuration.availabilityZone,
  configuration.state.value
WHERE
  resourceType = 'AWS::EC2::Volume'
  AND configuration.state.value <> 'in-use'
  
  
 #To list the instace by types
 SELECT
  configuration.instanceType,
  COUNT(*)
WHERE
  resourceType = 'AWS::EC2::Instance'
GROUP BY
  configuration.instanceType
  
  
  
  #s3 buckets are public
    
SELECT
  resourceId,
  resourceType,
  accountId,
  supplementaryConfiguration.PublicAccessBlockConfiguration.blockPublicPolicy,
  supplementaryConfiguration.PublicAccessBlockConfiguration.blockPublicAcls,
  supplementaryConfiguration.PublicAccessBlockConfiguration.ignorePublicAcls,
  supplementaryConfiguration.PublicAccessBlockConfiguration.restrictPublicBuckets
WHERE
  supplementaryConfiguration.PublicAccessBlockConfiguration.blockPublicPolicy = 'false'
  OR supplementaryConfiguration.PublicAccessBlockConfiguration.blockPublicAcls = 'false'
  OR supplementaryConfiguration.PublicAccessBlockConfiguration.ignorePublicAcls = 'false'
  OR supplementaryConfiguration.PublicAccessBlockConfiguration.restrictPublicBuckets = 'false'
  
  
 #Group by volume type
  SELECT
  configuration.volumeType,
  COUNT(*)
WHERE
  resourceType = 'AWS::EC2::Volume'
GROUP BY
  configuration.volumeType
  
  
  
  
  
  
  
  ##RDS is public
  SELECT
  resourceId,
  resourceName,
  resourceType,
  accountId,
  configuration.publiclyAccessible
WHERE
  configuration.publiclyAccessible = TRUE
  
  
#RelatioShip of the instances
SELECT
  *
WHERE
  relationships.resourceId = '<Instance-id>'
  
  
    
