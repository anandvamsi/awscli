
The least permission given to IAM user to push the logs from the server to any Log group starts with Dev
>>>>>
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": "arn:aws:logs:us-west-2:<AWS Account number>:log-group:Dev*:*"
        }
    ]
}
-------------------------------------------------------
>> sample Json file to push mulitple log files to cloud watch log insights
1. contnet for /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/file_config.json

{
        "agent": {
                "run_as_user": "root",
                "region": "us-west-2"
        },
        "logs": {
                "logs_collected": {
                        "files": {
                                "collect_list": [
                                        {
                                                "file_path": "/var/log/messages*",
                                                "log_group_name": "DevMessages",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/secure*",
                                                "log_group_name": "DevSecure",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/boot.log*",
                                                "log_group_name": "DevBootlog",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/dnf.*",
                                                "log_group_name": "DevDnf",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/maillog*",
                                                "log_group_name": "DevMaillog",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/vmware-network.*log",
                                                "log_group_name": "DevVmware-network",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/vmware-vmsvc.*log",
                                                "log_group_name": "DevVmware-vmsvc",
                                                "log_stream_name": "{hostname}"
                                        },
                                        {
                                                "file_path": "/var/log/vmware-vmsvc-root.*log",
                                                "log_group_name": "DevVmware-vmsvc-root",
                                                "log_stream_name": "{hostname}"
                                       },
                                        {
                                                "file_path": "/var/log/vmware-vmtoolsd-root.*log",
                                                "log_group_name": "DevVmware-vmtoolsd-root",
                                                "log_stream_name": "{hostname}"
                                        }
                                ]
                        }
                }
        }
}



2.	systemctl stop amazon-cloudwatch-agent.service
3.	systemctl start amazon-cloudwatch-agent.service







---------------------
Basic of queries 
-------------------

Log insights has a custom query language which is pretty similar to SQL
display → select
fields → attributes/columns available for display
filter → where
stats → group by
sort → order by
limit → limit



#To show all the fields
fields @ingestionTime, @logStream, @message, @timestamp

##To filter the message and average it by the server name
filter @message  like /Binding to IPv6 address not available since kernel/ | fields @ingestionTime, @logStream | stats count(*) as error_count by @logStream

#filter message not having this pattern
fields @message | filter @message not like /Exception/

#filter message with exception pattern
filter @message like /Exception/ 
    | stats count(*) as exceptionCount by bin(1h)
    | sort exceptionCount desc
    
#Query specic from server
filter @logStream like /<hostname>/

#Getting the count error specfic in host
filter @logStream like /<hostname>/ | filter @message like /OMI/ |stats count() by bin(2h)


#Query for stats for IP/API and method
parse @message "* - * [*]" as ip, user,time
parse @message "* - * [*]" as ip, user,time  | stat count(*) by ip

parse @message "* - * [*] * * " as ip, user,time,method,API | stats count(*) by API
Parse @message "* - * [*] * * *" as ip, user,time,method,data | stat count(*) by method

#Order by HTTP_response 
  parse @message "* - * [*] * * * * *" as ip, user,time,method,API,RequestType,http_code | stats count(*) by http_code
  
#Duration Desending order
  parse @message "* - * [*] * * * * * *" as ip, user,time,method,API,RequestType,http_code,Duration | sort Duration desc
  
  
  #Container query insights
  stats avg(CpuUtilized) as CPU, avg(MemoryUtilized) as Mem by TaskId, ContainerName
| sort Mem, CPU desc



